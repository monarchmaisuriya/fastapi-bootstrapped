[project]
name = "fastapi-bootstrapped"
version = "0.1.0"
description = "Starter template for FastAPI projects"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi[standard]>=0.115.12",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "python-dotenv>=1.1.0",
    "sqlmodel>=0.0.24",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "alembic<2.0.0,>=1.12.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.0.1",
    "pyjwt<3.0.0,>=2.8.0",
    "greenlet>=3.2.3",
]

[dependency-groups]
dev = [
    "ruff>=0.11.13",
]
[tool.ruff]
target-version = "py310"
exclude = [".venv", "alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]


[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
